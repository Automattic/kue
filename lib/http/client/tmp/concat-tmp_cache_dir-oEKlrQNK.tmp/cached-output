eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"client/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"client/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=client/app.js");

;eval("define(\"client/components/job-detail\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n    });\n  });//# sourceURL=client/components/job-detail.js");

;eval("define(\"client/components/jobs-filter\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n        selections: Ember.A([\'inactive\', \'complete\', \'active\', \'failed\', \'delayed\']),\n        selectedState: null,\n        /**\n         * Proxy because state is already used\n         */\n        sendState: function() {\n            this.set(\'state\', this.get(\'selectedState\'));\n        }.observes(\'selectedState\'),\n    });\n  });//# sourceURL=client/components/jobs-filter.js");

;eval("define(\"client/components/jobs-paging\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n\n        page: 1,\n\n        actions: {\n            next: function() {\n                this.incrementProperty(\'page\');\n            },\n\n            previous: function() {\n                if(this.get(\'page\') > 1) this.decrementProperty(\'page\');\n            }\n        }\n\n    });\n  });//# sourceURL=client/components/jobs-paging.js");

;eval("define(\"client/components/menu-tabs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n\n    });\n  });//# sourceURL=client/components/menu-tabs.js");

;eval("define(\"client/controllers/application\", \n  [\"ember\",\"client/models/job\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Job = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n\n        initStatsRefresh: function() {\n            var self = this;\n            self.updateStats(); // first call\n            setInterval(function() {\n                return self.updateStats();\n            }, 5000); // every 5s\n        }.on(\'init\'),\n\n        getJobTypes: function() {\n            var self = this;\n            Job.types().then(function(data) {\n                self.set(\'types\', data);\n            });\n        }.on(\'init\'),\n\n        updateStats: function() {\n            var self = this;\n            Job.stats().then(function(data) {\n                self.set(\'stats\', data);\n            });\n        },\n\n    });\n  });//# sourceURL=client/controllers/application.js");

;eval("define(\"client/models/job\", \n  [\"ember\",\"client/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    // \'/stats\'\n    // \'/job/search\'\n    // \'/jobs/:from..:to/:order?\'\n    // \'/jobs/:type/:state/:from..:to/:order?\'\n    // \'/jobs/:state/:from..:to/:order?\'\n    // \'/job/types\'\n    // \'/job/:id\'\n    // \'/job/:id/log\'\n    // \'/job/:id/state/:state\'\n    // \'/job/:id/priority/:priority\'\n    // \'/job/:id\'\n    // \'/job\'\n\n    /**\n     * Job model\n     * @class Encapsulates the JSON API for `/jobs`\n     */\n    var Job = Ember.Object.extend({ // Instance methods\n\n        dataJSON: function() {\n            return JSON.stringify(this.get(\'data\'), null, 4);\n        }.property(\'data\')\n    });\n\n    Job.reopenClass({ // Class methods\n\n        /**\n         * Request method\n         * @param  {Object} opts Options\n         * @return {Object}      Promise\n         */\n        _request: function(opts) {\n            return new Ember.RSVP.Promise(function(resolve, reject) {\n                Ember.$.ajax({\n                    url: opts.url,\n                    data: opts.data,\n                    type: opts.method\n                })\n                .success(resolve)\n                .fail(reject);\n            });\n        },\n\n        /**\n         * Find jobs\n         * @param  {Object} opts Options\n         * @return {Object}      Promise\n         */\n        find: function(opts) {\n            var size = Number(opts.size) || 20;\n            var page = Number(opts.page) || 1;\n            var from = (page - 1) * size;\n            var to = page * size ;\n\n            var url = \"\" + config.apiURL + \"/\" + from + \"..\" + to + \"\";\n\n            if(opts.type && opts.state) {\n                url = \"\" + config.apiURL + \"/jobs/\" + opts.type + \"/\" + opts.state + \"/\" + from + \"..\" + to + \"\";\n            } else if(opts.type) {\n                url = \"\" + config.apiURL + \"/jobs/\" + opts.type + \"/\" + from + \"..\" + to + \"\";\n            } else if(opts.state) {\n                url = \"\" + config.apiURL + \"/jobs/\" + opts.state + \"/\" + from + \"..\" + to + \"\";\n            }\n            console.log(\'fucking url\', url);\n            return this._request({\n                data: opts.data || {},\n                method: \'GET\',\n                url: url\n            })\n            .then( function(data) {\n                if (Ember.isArray(data)) {\n                    return data.map( function(obj) {\n                        return Job.create(obj);\n                    } );\n                } else {\n                    return Job.create(data);\n                }\n            });\n        },\n\n        /**\n         * Fetch stats from the Jobs\n         * @return {Object} Promise\n         */\n        stats: function() {\n            return this._request({\n                method: \'GET\',\n                url: \"\" + config.apiURL + \"/stats\"\n            });\n        },\n\n        /**\n         * Return all the job types\n         * @return {Object} Promise\n         */\n        types: function() {\n            return this._request({\n                method: \'GET\',\n                url: \"\" + config.apiURL + \"/job/types/\"\n            });\n        }\n\n    });\n\n    __exports__[\"default\"] = Job;\n  });//# sourceURL=client/models/job.js");

;eval("define(\"client/controllers/jobs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    });\n  });//# sourceURL=client/controllers/jobs.js");

;eval("define(\"client/controllers/jobs/type\", \n  [\"ember\",\"client/mixins/jobs-controller\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var JobsController = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend(JobsController, {\n        actions: {\n            showDetail: function(job) {\n                return job.set(\'showDetail\', true);\n            },\n        }\n    });\n  });//# sourceURL=client/controllers/jobs/type.js");

;eval("define(\"client/mixins/jobs-controller\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Mixin.create({\n        queryParams: [\'state\', \'sort\', \'page\'],\n        // query params will be a separate  value for every object implementing the mixin\n        state: Ember.computed(function(){return null; }),\n        sort: Ember.computed(function(){return null; }),\n        page: Ember.computed(function(){return null; }),\n    });\n  });//# sourceURL=client/mixins/jobs-controller.js");

;eval("define(\"client/initializers/export-application-global\", \n  [\"ember\",\"client/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=client/initializers/export-application-global.js");

;eval("define(\"client/mixins/jobs-route\", \n  [\"ember\",\"client/mixins/jobs-route\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var JobsRouteMixin = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Mixin.create(JobsRouteMixin,\n    {\n        queryParams: {\n            page: { refreshModel: true },\n            sort: { refreshModel: true },\n            state: { refreshModel: true }\n        }\n\n    });\n  });//# sourceURL=client/mixins/jobs-route.js");

;eval("define(\"client/router\", \n  [\"ember\",\"client/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n        location: config.locationType\n    });\n\n    Router.map(function() {\n        this.route(\'jobs\', function() {\n            this.route(\'type\', { path: \"type/:type\" });\n        });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=client/router.js");

;eval("define(\"client/routes/jobs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n    });\n  });//# sourceURL=client/routes/jobs.js");

;eval("define(\"client/routes/jobs/type\", \n  [\"ember\",\"client/models/job\",\"client/mixins/jobs-route\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Job = __dependency2__[\"default\"];\n    var JobsRoute = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend(JobsRoute, {\n\n        model: function(params) {\n            this.controllerFor(\'jobs.type\').set(\'type\', params.type);\n            return Job.find({\n                type: params.type,\n                state: params.state,\n                page: params.page\n            });\n        },\n\n    });\n  });//# sourceURL=client/routes/jobs/type.js");

;eval("define(\"client/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\" kue \");\n      }\n\n      data.buffer.push(\"<div class=\\\"container\\\">\\n  <div class=\\\"menu\\\">\\n    <div class=\\\"logo\\\">\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"jobs.index\", options) : helperMissing.call(depth0, \"link-to\", \"jobs.index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers[\'menu-tabs\'] || (depth0 && depth0[\'menu-tabs\']),options={hash:{\n        \'stats\': (\"stats\"),\n        \'types\': (\"types\")\n      },hashTypes:{\'stats\': \"ID\",\'types\': \"ID\"},hashContexts:{\'stats\': depth0,\'types\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"menu-tabs\", options))));\n      data.buffer.push(\"\\n  </div>\\n  <div class=\\\"main\\\">\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/application.js");

;eval("define(\"client/templates/components/job-detail\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"\\n\\n\");\n      \n    });\n  });//# sourceURL=client/templates/components/job-detail.js");

;eval("define(\"client/templates/components/jobs-filter\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      data.buffer.push(\"<div class=\\\"top-bar\\\">\\n    <div class=\\\"type\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"type\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" ></div>\\n    <div class=\\\"dropdown\\\">\\n        \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Select\", {hash:{\n        \'content\': (\"selections\"),\n        \'selection\': (\"selectedState\")\n      },hashTypes:{\'content\': \"ID\",\'selection\': \"ID\"},hashContexts:{\'content\': depth0,\'selection\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n    </div>\\n    <div class=\\\"dropdown right\\\">sort by</div>\\n</div>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"yield\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'jobs-paging\'] || (depth0 && depth0[\'jobs-paging\']),options={hash:{\n        \'page\': (\"page\")\n      },hashTypes:{\'page\': \"ID\"},hashContexts:{\'page\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"jobs-paging\", options))));\n      data.buffer.push(\"\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/components/jobs-filter.js");

;eval("define(\"client/templates/components/jobs-paging\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"paging\\\">\\n  <div class=\\\"btn-paging previous\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"previous\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Previous</div>\\n  <div class=\\\"btn-paging next\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"next\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Next</div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/components/jobs-paging.js");

;eval("define(\"client/templates/components/menu-tabs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'replace\': (true)\n      },hashTypes:{\'replace\': \"BOOLEAN\"},hashContexts:{\'replace\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"jobs.type\", \"type\", options) : helperMissing.call(depth0, \"link-to\", \"jobs.type\", \"type\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"type\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"  \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"menu-list\\\">\\n    \");\n      stack1 = helpers.each.call(depth0, \"type\", \"in\", \"types\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/components/menu-tabs.js");

;eval("define(\"client/templates/jobs\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/jobs.js");

;eval("define(\"client/templates/jobs/type\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n<div class=\\\"table jobs\\\">\\n  <div class=\\\"heading\\\">\\n      <div class=\\\"col\\\">id</div>\\n      <div class=\\\"col\\\">type</div>\\n      <div class=\\\"col\\\">state</div>\\n      <div class=\\\"col\\\">created_at</div>\\n      <div class=\\\"col\\\">updated_at</div>\\n      <div class=\\\"col\\\">attempts</div>\\n  </div>\\n    \");\n      stack1 = helpers.each.call(depth0, \"job\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      <div class=\\\"table-row job\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showDetail\", \"job\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">\\n        <div class=\\\"col\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n        <div class=\\\"col\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.type\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n        <div class=\\\"col\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.state\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n        <div class=\\\"col\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.created_at\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n        <div class=\\\"col\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.updated_at\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n        <div class=\\\"col\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.attempts.made\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" (\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.attempts.remaining\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\") </div>\\n      </div>\\n      \");\n      stack1 = helpers[\'if\'].call(depth0, \"job.showDetail\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <div class=\\\"table-row detail\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"\\\">id:\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n            <div class=\\\"\\\">type:\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.type\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n            <div class=\\\"\\\">state:\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.state\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n            <div class=\\\"\\\">created_at:\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.created_at\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n            <div class=\\\"\\\">updated_at:\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.updated_at\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n            <div class=\\\"\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.attempts.made\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" (\");\n      stack1 = helpers._triageMustache.call(depth0, \"job.attempts.remaining\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\") </div>\\n          </div>\\n        </div>\\n      \");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'jobs-filter\'] || (depth0 && depth0[\'jobs-filter\']),options={hash:{\n        \'type\': (\"type\"),\n        \'state\': (\"state\"),\n        \'page\': (\"page\")\n      },hashTypes:{\'type\': \"ID\",\'state\': \"ID\",\'page\': \"ID\"},hashContexts:{\'type\': depth0,\'state\': depth0,\'page\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"jobs-filter\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/jobs/type.js");

;eval("define(\"client/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/app.jshint.js");

;eval("define(\"client/tests/client/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/helpers\');\n    test(\'client/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'client/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/helpers/resolver.jshint.js");

;eval("define(\"client/tests/client/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/helpers\');\n    test(\'client/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'client/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/helpers/start-app.jshint.js");

;eval("define(\"client/tests/client/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests\');\n    test(\'client/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'client/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/test-helper.jshint.js");

;eval("define(\"client/tests/client/tests/unit/components/job-detail-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/components\');\n    test(\'client/tests/unit/components/job-detail-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/components/job-detail-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/components/job-detail-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/components/jobs-filter-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/components\');\n    test(\'client/tests/unit/components/jobs-filter-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/components/jobs-filter-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/components/jobs-filter-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/components/jobs-paging-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/components\');\n    test(\'client/tests/unit/components/jobs-paging-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/components/jobs-paging-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/components/jobs-paging-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/components/menu-tabs-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/components\');\n    test(\'client/tests/unit/components/menu-tabs-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/components/menu-tabs-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/components/menu-tabs-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/controllers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/controllers\');\n    test(\'client/tests/unit/controllers/application-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/controllers/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/controllers/application-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/controllers/jobs-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/controllers\');\n    test(\'client/tests/unit/controllers/jobs-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/controllers/jobs-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/controllers/jobs-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/controllers/jobs/type-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/controllers/jobs\');\n    test(\'client/tests/unit/controllers/jobs/type-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/controllers/jobs/type-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/controllers/jobs/type-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/mixins/jobs-controller-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/mixins\');\n    test(\'client/tests/unit/mixins/jobs-controller-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/mixins/jobs-controller-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/mixins/jobs-controller-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/mixins/jobs-route-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/mixins\');\n    test(\'client/tests/unit/mixins/jobs-route-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/mixins/jobs-route-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/mixins/jobs-route-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/routes/jobs-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/routes\');\n    test(\'client/tests/unit/routes/jobs-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/routes/jobs-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/routes/jobs-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/routes/jobs/type-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/routes/jobs\');\n    test(\'client/tests/unit/routes/jobs/type-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/routes/jobs/type-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/routes/jobs/type-test.jshint.js");

;eval("define(\"client/tests/components/job-detail.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - components\');\n    test(\'components/job-detail.js should pass jshint\', function() { \n      ok(true, \'components/job-detail.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/components/job-detail.jshint.js");

;eval("define(\"client/tests/components/jobs-filter.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - components\');\n    test(\'components/jobs-filter.js should pass jshint\', function() { \n      ok(true, \'components/jobs-filter.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/components/jobs-filter.jshint.js");

;eval("define(\"client/tests/components/jobs-paging.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - components\');\n    test(\'components/jobs-paging.js should pass jshint\', function() { \n      ok(false, \'components/jobs-paging.js should pass jshint.\\ncomponents/jobs-paging.js: line 13, col 38, Expected \\\'{\\\' and instead saw \\\'this\\\'.\\n\\n1 error\'); \n    });\n  });//# sourceURL=client/tests/components/jobs-paging.jshint.js");

;eval("define(\"client/tests/components/menu-tabs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - components\');\n    test(\'components/menu-tabs.js should pass jshint\', function() { \n      ok(true, \'components/menu-tabs.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/components/menu-tabs.jshint.js");

;eval("define(\"client/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/application.js should pass jshint\', function() { \n      ok(true, \'controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/controllers/application.jshint.js");

;eval("define(\"client/tests/controllers/jobs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/jobs.js should pass jshint\', function() { \n      ok(true, \'controllers/jobs.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/controllers/jobs.jshint.js");

;eval("define(\"client/tests/controllers/jobs/type.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/jobs\');\n    test(\'controllers/jobs/type.js should pass jshint\', function() { \n      ok(true, \'controllers/jobs/type.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/controllers/jobs/type.jshint.js");

;eval("define(\"client/tests/helpers/resolver\", \n  [\"ember/resolver\",\"client/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=client/tests/helpers/resolver.js");

;eval("define(\"client/tests/helpers/start-app\", \n  [\"ember\",\"client/app\",\"client/router\",\"client/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=client/tests/helpers/start-app.js");

;eval("define(\"client/tests/mixins/jobs-controller.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mixins\');\n    test(\'mixins/jobs-controller.js should pass jshint\', function() { \n      ok(true, \'mixins/jobs-controller.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/mixins/jobs-controller.jshint.js");

;eval("define(\"client/tests/mixins/jobs-route.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mixins\');\n    test(\'mixins/jobs-route.js should pass jshint\', function() { \n      ok(true, \'mixins/jobs-route.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/mixins/jobs-route.jshint.js");

;eval("define(\"client/tests/models/job.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/job.js should pass jshint\', function() { \n      ok(true, \'models/job.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/models/job.jshint.js");

;eval("define(\"client/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/router.jshint.js");

;eval("define(\"client/tests/routes/jobs.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/jobs.js should pass jshint\', function() { \n      ok(true, \'routes/jobs.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/routes/jobs.jshint.js");

;eval("define(\"client/tests/routes/jobs/type.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/jobs\');\n    test(\'routes/jobs/type.js should pass jshint\', function() { \n      ok(true, \'routes/jobs/type.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/routes/jobs/type.jshint.js");

;eval("define(\"client/tests/test-helper\", \n  [\"client/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=client/tests/test-helper.js");

;eval("define(\"client/tests/unit/components/job-detail-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    moduleForComponent(\'job-detail\', \'JobDetailComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component._state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=client/tests/unit/components/job-detail-test.js");

;eval("define(\"client/tests/unit/components/jobs-filter-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    moduleForComponent(\'jobs-filter\', \'JobsFilterComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component._state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=client/tests/unit/components/jobs-filter-test.js");

;eval("define(\"client/tests/unit/components/jobs-paging-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    moduleForComponent(\'jobs-paging\', \'JobsPagingComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component._state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=client/tests/unit/components/jobs-paging-test.js");

;eval("define(\"client/tests/unit/components/menu-tabs-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    var test = __dependency1__.test;\n\n    moduleForComponent(\'menu-tabs\', \'MenuTabsComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component._state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component._state, \'inDOM\');\n    });\n  });//# sourceURL=client/tests/unit/components/menu-tabs-test.js");

;eval("define(\"client/tests/unit/controllers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:application\', \'ApplicationController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=client/tests/unit/controllers/application-test.js");

;eval("define(\"client/tests/unit/controllers/jobs-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:jobs\', \'JobsController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=client/tests/unit/controllers/jobs-test.js");

;eval("define(\"client/tests/unit/controllers/jobs/type-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:jobs/type\', \'JobsTypeController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=client/tests/unit/controllers/jobs/type-test.js");

;eval("define(\"client/tests/unit/mixins/jobs-controller-test\", \n  [\"ember\",\"client/mixins/jobs-controller\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var JobsControllerMixin = __dependency2__[\"default\"];\n\n    module(\'JobsControllerMixin\');\n\n    // Replace this with your real tests.\n    test(\'it works\', function() {\n      var JobsControllerObject = Ember.Object.extend(JobsControllerMixin);\n      var subject = JobsControllerObject.create();\n      ok(subject);\n    });\n  });//# sourceURL=client/tests/unit/mixins/jobs-controller-test.js");

;eval("define(\"client/tests/unit/mixins/jobs-route-test\", \n  [\"ember\",\"client/mixins/jobs-route\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var JobsRouteMixin = __dependency2__[\"default\"];\n\n    module(\'JobsRouteMixin\');\n\n    // Replace this with your real tests.\n    test(\'it works\', function() {\n      var JobsRouteObject = Ember.Object.extend(JobsRouteMixin);\n      var subject = JobsRouteObject.create();\n      ok(subject);\n    });\n  });//# sourceURL=client/tests/unit/mixins/jobs-route-test.js");

;eval("define(\"client/tests/unit/routes/jobs-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:jobs\', \'JobsRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=client/tests/unit/routes/jobs-test.js");

;eval("define(\"client/tests/unit/routes/jobs/type-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:jobs/type\', \'JobsTypeRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=client/tests/unit/routes/jobs/type-test.js");

/* jshint ignore:start */

define('client/config/environment', ['ember'], function(Ember) {
  var prefix = 'client';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */


});

if (runningTests) {
  require('client/tests/test-helper');
} else {
  require('client/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
